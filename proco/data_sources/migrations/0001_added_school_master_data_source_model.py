# Generated by Django 2.2.28 on 2024-01-08 12:38

import django.utils.timezone
import model_utils.fields
import simple_history.models
from django.conf import settings
from django.db import migrations, models

import proco.core.models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('schools', '0024_added_school_master_new_fields_support'),
    ]

    operations = [
        migrations.CreateModel(
            name='SchoolMasterData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False,
                                                                verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False,
                                                                      verbose_name='modified')),
                ('country_iso3_format', models.CharField(max_length=5)),
                ('school_id_giga', models.CharField(max_length=50)),
                ('school_id_gov', models.CharField(blank=True, max_length=255, null=True)),
                ('school_name', models.CharField(default='Name unknown', max_length=255)),
                ('admin1', models.CharField(blank=True, max_length=255, null=True)),
                ('admin2', models.CharField(blank=True, max_length=255, null=True)),
                ('latitude', models.FloatField(blank=True, default=None, null=True)),
                ('longitude', models.FloatField(blank=True, default=None, null=True)),
                ('education_level', models.CharField(blank=True, max_length=255, null=True)),
                ('school_area_type', models.CharField(blank=True, max_length=255, null=True)),
                ('school_funding_type', models.CharField(blank=True, max_length=255, null=True)),
                ('school_establishment_year', models.PositiveSmallIntegerField(blank=True, default=None, null=True)),
                ('download_speed_contracted', models.FloatField(blank=True, default=None, null=True)),
                ('num_computers_desired', models.PositiveIntegerField(blank=True, default=None, null=True)),
                ('electricity_type', models.CharField(blank=True, max_length=255, null=True)),
                ('num_adm_personnel', models.PositiveIntegerField(blank=True, default=None, null=True)),
                ('num_students', models.PositiveIntegerField(blank=True, default=None, null=True)),
                ('num_teachers', models.PositiveIntegerField(blank=True, default=None, null=True)),
                ('num_classroom', models.PositiveIntegerField(blank=True, default=None, null=True)),
                ('num_latrines', models.PositiveIntegerField(blank=True, default=None, null=True)),
                ('water_availability', models.CharField(blank=True, max_length=255, null=True)),
                ('electricity_availability', models.CharField(blank=True, max_length=255, null=True)),
                ('computer_lab', models.CharField(blank=True, max_length=255, null=True)),
                ('num_computers', models.PositiveIntegerField(blank=True, default=None, null=True)),
                ('connectivity_govt', models.CharField(blank=True, max_length=255, null=True)),
                ('connectivity_type_govt', models.CharField(blank=True, max_length=255, null=True)),
                ('cellular_coverage_availability', models.CharField(blank=True, max_length=255, null=True)),
                ('cellular_coverage_type', models.CharField(blank=True, max_length=255, null=True)),
                ('connectivity', models.CharField(blank=True, max_length=255, null=True)),
                ('school_data_source', models.CharField(blank=True, max_length=255, null=True)),
                ('school_data_collection_year', models.PositiveSmallIntegerField(blank=True, default=None, null=True)),
                ('school_data_collection_modality', models.CharField(blank=True, max_length=255, null=True)),
                ('fiber_node_distance', models.FloatField(blank=True, default=None, null=True)),
                ('microwave_node_distance', models.FloatField(blank=True, default=None, null=True)),
                ('schools_within_1km', models.PositiveIntegerField(blank=True, default=None, null=True)),
                ('schools_within_2km', models.PositiveIntegerField(blank=True, default=None, null=True)),
                ('schools_within_3km', models.PositiveIntegerField(blank=True, default=None, null=True)),
                ('nearest_LTE_distance', models.FloatField(blank=True, default=None, null=True)),
                ('nearest_UMTS_distance', models.FloatField(blank=True, default=None, null=True)),
                ('nearest_GSM_distance', models.FloatField(blank=True, default=None, null=True)),
                ('pop_within_1km', models.PositiveIntegerField(blank=True, default=None, null=True)),
                ('pop_within_2km', models.PositiveIntegerField(blank=True, default=None, null=True)),
                ('pop_within_3km', models.PositiveIntegerField(blank=True, default=None, null=True)),
                ('school_location_ingestion_timestamp', proco.core.models.CustomDateTimeField(blank=True, null=True)),
                ('connectivity_RT', models.CharField(blank=True, max_length=255, null=True)),
                ('connectivity_RT_datasource', models.CharField(blank=True, max_length=255, null=True)),
                ('connectivity_RT_ingestion_timestamp', proco.core.models.CustomDateTimeField(blank=True, null=True)),
                ('connectivity_govt_ingestion_timestamp', proco.core.models.CustomDateTimeField(blank=True, null=True)),
                ('connectivity_govt_collection_year',
                 models.PositiveSmallIntegerField(blank=True, default=None, null=True)),
                ('disputed_region', models.CharField(blank=True, max_length=255, null=True)),
                ('nearest_NR_id', models.CharField(blank=True, max_length=255, null=True)),
                ('nearest_NR_distance', models.FloatField(blank=True, default=None, null=True)),
                ('connectivity_static', models.CharField(blank=True, max_length=255, null=True)),
                ('version', models.PositiveIntegerField(blank=True, default=None, null=True)),
                ('status', models.CharField(choices=[('DRAFT', 'In Draft'), ('UPDATED_IN_DRAFT', 'Locked by Editor'),
                                                     ('DRAFT_LOCKED', 'Sent to publisher'),
                                                     ('UPDATED_IN_DRAFT_LOCKED', 'Locked by Publisher'),
                                                     ('PUBLISHED', 'Published'), ('DELETED', 'Deleted')],
                                            default='DRAFT', max_length=50)),
                ('published_at', proco.core.models.CustomDateTimeField(blank=True, db_index=True, null=True)),
                ('is_read', models.BooleanField(default=False)),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING,
                                                  related_name='updated_schoolmasterdatas', to=settings.AUTH_USER_MODEL,
                                                  verbose_name='Last Updated By')),
                ('published_by',
                 models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING,
                                   related_name='source_published_schoolmasterdatas', to=settings.AUTH_USER_MODEL,
                                   verbose_name='Published By')),
                ('school', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING,
                                             related_name='proco_schools', to='schools.School',
                                             verbose_name='Proco School')),
            ],
            options={
                'ordering': ['created'],
            },
        ),
        migrations.CreateModel(
            name='HistoricalSchoolMasterData',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False,
                                                                verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False,
                                                                      verbose_name='modified')),
                ('country_iso3_format', models.CharField(max_length=5)),
                ('school_id_giga', models.CharField(max_length=50)),
                ('school_id_gov', models.CharField(blank=True, max_length=255, null=True)),
                ('school_name', models.CharField(default='Name unknown', max_length=255)),
                ('admin1', models.CharField(blank=True, max_length=255, null=True)),
                ('admin2', models.CharField(blank=True, max_length=255, null=True)),
                ('latitude', models.FloatField(blank=True, default=None, null=True)),
                ('longitude', models.FloatField(blank=True, default=None, null=True)),
                ('education_level', models.CharField(blank=True, max_length=255, null=True)),
                ('school_area_type', models.CharField(blank=True, max_length=255, null=True)),
                ('school_funding_type', models.CharField(blank=True, max_length=255, null=True)),
                ('school_establishment_year', models.PositiveSmallIntegerField(blank=True, default=None, null=True)),
                ('download_speed_contracted', models.FloatField(blank=True, default=None, null=True)),
                ('num_computers_desired', models.PositiveIntegerField(blank=True, default=None, null=True)),
                ('electricity_type', models.CharField(blank=True, max_length=255, null=True)),
                ('num_adm_personnel', models.PositiveIntegerField(blank=True, default=None, null=True)),
                ('num_students', models.PositiveIntegerField(blank=True, default=None, null=True)),
                ('num_teachers', models.PositiveIntegerField(blank=True, default=None, null=True)),
                ('num_classroom', models.PositiveIntegerField(blank=True, default=None, null=True)),
                ('num_latrines', models.PositiveIntegerField(blank=True, default=None, null=True)),
                ('water_availability', models.CharField(blank=True, max_length=255, null=True)),
                ('electricity_availability', models.CharField(blank=True, max_length=255, null=True)),
                ('computer_lab', models.CharField(blank=True, max_length=255, null=True)),
                ('num_computers', models.PositiveIntegerField(blank=True, default=None, null=True)),
                ('connectivity_govt', models.CharField(blank=True, max_length=255, null=True)),
                ('connectivity_type_govt', models.CharField(blank=True, max_length=255, null=True)),
                ('cellular_coverage_availability', models.CharField(blank=True, max_length=255, null=True)),
                ('cellular_coverage_type', models.CharField(blank=True, max_length=255, null=True)),
                ('connectivity', models.CharField(blank=True, max_length=255, null=True)),
                ('school_data_source', models.CharField(blank=True, max_length=255, null=True)),
                ('school_data_collection_year', models.PositiveSmallIntegerField(blank=True, default=None, null=True)),
                ('school_data_collection_modality', models.CharField(blank=True, max_length=255, null=True)),
                ('fiber_node_distance', models.FloatField(blank=True, default=None, null=True)),
                ('microwave_node_distance', models.FloatField(blank=True, default=None, null=True)),
                ('schools_within_1km', models.PositiveIntegerField(blank=True, default=None, null=True)),
                ('schools_within_2km', models.PositiveIntegerField(blank=True, default=None, null=True)),
                ('schools_within_3km', models.PositiveIntegerField(blank=True, default=None, null=True)),
                ('nearest_LTE_distance', models.FloatField(blank=True, default=None, null=True)),
                ('nearest_UMTS_distance', models.FloatField(blank=True, default=None, null=True)),
                ('nearest_GSM_distance', models.FloatField(blank=True, default=None, null=True)),
                ('pop_within_1km', models.PositiveIntegerField(blank=True, default=None, null=True)),
                ('pop_within_2km', models.PositiveIntegerField(blank=True, default=None, null=True)),
                ('pop_within_3km', models.PositiveIntegerField(blank=True, default=None, null=True)),
                ('school_location_ingestion_timestamp', proco.core.models.CustomDateTimeField(blank=True, null=True)),
                ('connectivity_RT', models.CharField(blank=True, max_length=255, null=True)),
                ('connectivity_RT_datasource', models.CharField(blank=True, max_length=255, null=True)),
                ('connectivity_RT_ingestion_timestamp', proco.core.models.CustomDateTimeField(blank=True, null=True)),
                ('connectivity_govt_ingestion_timestamp', proco.core.models.CustomDateTimeField(blank=True, null=True)),
                ('connectivity_govt_collection_year',
                 models.PositiveSmallIntegerField(blank=True, default=None, null=True)),
                ('disputed_region', models.CharField(blank=True, max_length=255, null=True)),
                ('nearest_NR_id', models.CharField(blank=True, max_length=255, null=True)),
                ('nearest_NR_distance', models.FloatField(blank=True, default=None, null=True)),
                ('connectivity_static', models.CharField(blank=True, max_length=255, null=True)),
                ('version', models.PositiveIntegerField(blank=True, default=None, null=True)),
                ('status', models.CharField(choices=[('DRAFT', 'In Draft'), ('UPDATED_IN_DRAFT', 'Locked by Editor'),
                                                     ('DRAFT_LOCKED', 'Sent to publisher'),
                                                     ('UPDATED_IN_DRAFT_LOCKED', 'Locked by Publisher'),
                                                     ('PUBLISHED', 'Published'), ('DELETED', 'Deleted')],
                                            default='DRAFT', max_length=50)),
                ('published_at', proco.core.models.CustomDateTimeField(blank=True, db_index=True, null=True)),
                ('is_read', models.BooleanField(default=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type',
                 models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user',
                 models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+',
                                   to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, db_constraint=False, null=True,
                                                  on_delete=django.db.models.deletion.DO_NOTHING, related_name='+',
                                                  to=settings.AUTH_USER_MODEL, verbose_name='Last Updated By')),
                ('published_by', models.ForeignKey(blank=True, db_constraint=False, null=True,
                                                   on_delete=django.db.models.deletion.DO_NOTHING, related_name='+',
                                                   to=settings.AUTH_USER_MODEL, verbose_name='Published By')),
                ('school', models.ForeignKey(blank=True, db_constraint=False, null=True,
                                             on_delete=django.db.models.deletion.DO_NOTHING, related_name='+',
                                             to='schools.School', verbose_name='Proco School')),
            ],
            options={
                'verbose_name': 'historical school master data',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
